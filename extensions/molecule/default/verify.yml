---
- name: Verify
  hosts: all
  gather_facts: false
  vars:
    clientcert_hostname: server.example.com
  tasks:
    - name: Get CA information
      community.crypto.x509_certificate_info:
        path: /etc/pki/CA/certs/ca.cert.pem
      register: ca_result

    - name: Get CA private key
      community.crypto.openssl_privatekey_info:
        path: /etc/pki/CA/private/ca.key.pem
        passphrase: changeme
      register: ca_priv_result

    - name: Verify that the CA certificate vaules match
      ansible.builtin.assert:
        that:
          - ca_result.public_key == ca_priv_result.public_key
          - ca_result.signature_algorithm == 'sha256WithRSAEncryption' or ca_result.signature_algorithm == 'sha512WithRSAEncryption'
          - ca_result.subject.commonName == 'Certificate Authority'
          - ca_result.subject | length == 5
          - ca_result.issuer.commonName == 'Certificate Authority'
          - ca_result.issuer | length == 5
          - not ca_result.expired
          - ca_result.version == 3
          - "'Certificate Sign' in ca_result.key_usage"
          - ca_result.key_usage | length == 1

    - name: Get client certificate information
      community.crypto.x509_certificate_info:
        path: /etc/pki/CA/certs/{{ clientcert_hostname }}.cert.pem
      register: client_result

    - name: Get client private key
      community.crypto.openssl_privatekey_info:
        path: /etc/pki/CA/private/{{ clientcert_hostname }}.key.pem
      register: client_priv_result

    - name: Verify that the client certificate vaules match
      ansible.builtin.assert:
        that:
          - client_result.public_key == client_priv_result.public_key
          - client_result.signature_algorithm == 'sha256WithRSAEncryption' or client_result.signature_algorithm == 'sha512WithRSAEncryption'
          - client_result.subject.commonName == 'server.example.com'
          - client_result.subject | length == 5
          - client_result.issuer.commonName == 'Certificate Authority'
          - client_result.issuer | length == 5
          - not client_result.expired
          - client_result.version == 3
          - "'Key Encipherment' in client_result.key_usage"
          - client_result.key_usage | length == 4
